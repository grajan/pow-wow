apply plugin: 'com.android.application'
apply plugin: 'de.felixschulze.gradle.hockeyapp'

def getStore = { ->
    def result = project.hasProperty('storeFile') ? storeFile : "keystore-required"
    return file(result)
}

def getStorePassword = { ->
    def result = project.hasProperty('storePassword') ? storePassword : ""
    return result
}

def getKeyAlias = { ->
    def result = project.hasProperty('keyAlias') ? keyAlias : ""
    return result
}

def getKeyPassword = { ->
    def result = project.hasProperty('keyPassword') ? keyPassword : ""
    return result
}

repositories {
    flatDir {
        dirs "${project.rootDir}/sdk/build/outputs/aar"
    }
}

android {
    lintOptions {
        abortOnError false
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId 'com.example.locuslabs.airportlist'
        minSdkVersion 18
        targetSdkVersion 25
        versionCode 10
        versionName '1.2.27.0'
    }
    signingConfigs {
        development {
            storeFile getStore()
            storePassword getStorePassword()
            keyAlias getKeyAlias()
            keyPassword getKeyPassword()
        }
        release {
            storeFile getStore()
            storePassword getStorePassword()
            keyAlias getKeyAlias()
            keyPassword getKeyPassword()
        }
    }
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            renderscriptOptimLevel 3
            minifyEnabled false
            useProguard false
            zipAlignEnabled false
        }
        development {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.development
            renderscriptDebuggable true
            renderscriptOptimLevel 3
            minifyEnabled false
            proguardFile 'proguard-rules.pro'
            zipAlignEnabled false
        }
        release {
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
            renderscriptDebuggable false
            renderscriptOptimLevel 3
            minifyEnabled true
            zipAlignEnabled true
            proguardFile 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // LocusLabs SDK Dependency - 'Failed to resolve: com.locuslabs:sdk:+' - Provide the path or address to a maven repository in the project root's build.gradle
    compile('com.locuslabs:sdk:+:release@aar') {
        transitive = true
    }

    compile 'org.kamranzafar:jtar:2.2'
    compile 'org.tukaani:xz:1.5'
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

if (project.hasProperty("HockeyApp")) {
    // At PROJECT ROOT enter CMD: ./gradlew upload
    def _HockeyApp = "${HockeyApp}"
    hockeyapp {
        apiToken = _HockeyApp
        releaseType = 3 // alpha = 2 | production = 3 | beta = 0 | store = 1
        notify = 0 // false = 0 | true = 1
        status = 2 // no download = 1 | downloadable = 2
        notesType = 1 // txt = 0 | markdown = 1
        notes = new File(file('../../../ReleaseNotes.txt').absolutePath).getText('UTF-8')
    }
}

apply from: rootProject.file('gradle/upload.gradle')